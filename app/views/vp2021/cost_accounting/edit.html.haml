-#  Copyright (c) 2012-2020, insieme Schweiz. This file is part of
-#  hitobito_insieme and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_insieme.

- @subtitle = I18n.t('crud.edit.title', model: entry)

= reporting_frozen_message

= crud_form(entry, url: cost_accounting_report_group_path(group, year, entry.report),
                   cancel_url: cost_accounting_group_path(group, year: year),
                   buttons_top: !reporting_frozen?,
                   buttons_bottom: !reporting_frozen?,
                   method: :put,
                   html: { class: 'report', data: { readonly: reporting_frozen? } }) do |f|

  - if report.editable_fields.include?('aufwand_ertrag_fibu')
    = f.labeled_input_field(:aufwand_ertrag_fibu,
                            label: report.aufwand ? t('.aufwand_fibu') : t('.ertrag_fibu'),
                            addon: t('global.currency'))

  - if report.editable_fields.include?('aufteilung_kontengruppen')
    = f.labeled_input_field(:aufteilung_kontengruppen)
    - if previous_entry.aufteilung_kontengruppen.present?
      #cost_accounting_note_copy.hidden
        = f.labeled(:copy_previous_notes, '&nbsp;'.html_safe) do
          = action_button(t('.copy_previous_notes'), '#', :copy)
      #vorheriger-kommentar.hidden
        = previous_entry.aufteilung_kontengruppen

  = cost_accounting_input_fields(f, :abgrenzung_fibu)

  - unless report == vp_class('CostAccounting::Report::DirekteSpendenAusserhalb')
    - factor = report == vp_class('CostAccounting::Report::IndirekteSpenden') ? table.value_of(report.key, 'abgrenzung_factor') : nil
    = f.labeled(:aufwand_ertrag_ko_re, report.aufwand ? t('.aufwand_ko_re') : t('.ertrag_ko_re')) do
      .inline#aufwand_ertrag_ko_re{data: { abgrenzung_factor: factor }}

  - if (report.editable_fields & gemeinkosten_fields).present?
    %h3= t('.gemeinkosten')
    = cost_accounting_input_fields(f, *gemeinkosten_fields)
    = f.labeled(:gemeinkosten) do
      .inline#gemeinkosten

  - if (report.editable_fields & section_fields).present?
    %h3= t('.kostentraeger')
    = cost_accounting_input_and_course_fields(f, *section_fields)

    = f.labeled(:kostentraeger) do
      .inline#kostentraeger

  - if (report.editable_fields & (section_fields + gemeinkosten_fields)).present?
    %hr/
    = f.labeled(:kontrolle) do
      .inline#control_value

- content_for(:javascripts) do
  new App.CostAccountingCalculator().updateValues();
  new App.CostAccountingNoteCopier().bind();
